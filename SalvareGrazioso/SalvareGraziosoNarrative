I chose to use the Grazioso Salvare project from my Client-Server development class for this assignment. This project was a python dashboard application meant to display a list of animals 
from a database of local animal shelters to find potential search and rescue animals. I chose this artifact for a few reasons first because I didn’t actually create the database
in the class it was provided to me, and this was my first time working with a MongoDB database. This artifact gave me the opportunity to go back and build the database myself. 
Another reason I chose to use this artifact was because while I created the CRUD operations for the original application they were only used for testing of the application and not actually part of the dashboard. 
I wanted to incorporate the CRUD operations into the application for this enhancement to better show my abilities and because the connections between application and database used to be a major issue for me
so this offered more experience in that subject. I chose to rewrite this application from Python to a Java application specifically using JavaFX. Originally I was going to use Java Swing but I found there were a few limitations
specifically with populating the table correctly using MongoDB and there are some functionalities that I would like to add to this artifact that I couldn’t do with Swing. 
After some research I found that JavaFX would allow me to incorporate everything I wanted to for this application. This artifact also gave me the opportunity to incorporate category two “algorithms and data structures”,
that I wasn’t able to properly incorporate into the original artifact meant for that category. I used ArrayLists to hold the returned database documents and then display them with JavaFX’s observable ArrayList function. 
This artifact also offers me some room for additions such as more advanced queries or incorporating algorithms into the artifact over time. I have included exception handling throughout the application to help avoid the 
application from crashing but I would like to incorporate more security principles into the application. 
I learned a lot throughout the development of this application, it gave me a lot of time to work with MongoDB and MongoDB Compass. I also got to work with JavaFX for the first time which was interesting, 
and provided some challenges. The biggest challenge I had throughout development was adding all the dependencies necessary to incorporate JavaFX into Eclipse. Eclipse had a download in the market place but the download 
isn’t updated to the current version of Eclipse, so I had to find a work around this was the first time I had run into an issue like this so while frustrating it was a good learning experience. 
Being able to use MongoDB Compass during development also helped me by giving me a visual representation of the database. It allowed me to test my applications CRUD functionality while showing me how documents 
were stored and giving me a better understanding of their format in the database. 
